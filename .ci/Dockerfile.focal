# Start with a base image
FROM ubuntu:20.04

# Set non-interactive mode
ENV DEBIAN_FRONTEND=noninteractive

ARG USER_UID=1001
ARG USER_GID=1001
ARG USERNAME=user

WORKDIR /workspaces

RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && mkdir -p -m 0700 /run/user/"${USER_UID}" \
    && mkdir -p -m 0700 /run/user/"${USER_UID}"/gdm \
    && chown user:user /run/user/"${USER_UID}" \
    && chown user:user /workspaces \
    && chown user:user /run/user/"${USER_UID}"/gdm \
    # [Optional] Add sudo support. Omit if you don't need to install software after connecting.
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# Install necessary packages
RUN apt-get update \
    && apt-get install -y \
    bash-completion \
    build-essential \
    clang-6.0 \
    clang-format-6.0 \
    clang-tidy-6.0 \
    cmake \
    doxygen \
    graphviz \
    lcov \
    libeigen3-dev \
    libpoco-dev \
    rename \
    valgrind \
    lsb-release \
    dpkg \
    git \
    libeigen3-dev \
    libpoco-dev \
    libfmt-dev \
    python3-dev \
    python3-pip \
    libtinyxml2-dev \
    lsb-release \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/* \
    && ln -s $(which clang-tidy-6.0) /usr/bin/clang-tidy \
    && ln -s $(which clang-format-6.0) /usr/bin/clang-format

# Add the necessary 3rd party dependencies for the robot-service
# Note: the order is important, change at your own risk.
RUN git clone --recursive --branch boost-1.77.0 https://github.com/boostorg/boost.git \
    && cd boost \
    && ./bootstrap.sh --prefix=/usr \
    && ./b2 install

RUN git clone --branch 10.0.0 https://github.com/leethomason/tinyxml2.git \
    && cd tinyxml2 \
    && mkdir build && cd build \
    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_LIBDIR=/usr/lib -DCMAKE_POSITION_INDEPENDENT_CODE=ON  \
    && make && make install

RUN git clone --branch 1.0.2 https://github.com/ros/console_bridge.git \
    && cd console_bridge \
    && mkdir build && cd build \
    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_LIBDIR=/usr/lib \
    && make && make install

RUN git clone --branch 1.0.5 https://github.com/ros/urdfdom_headers.git \
    && cd urdfdom_headers \
    && mkdir build && cd build \
    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_LIBDIR=/usr/lib \
    && make && make install

RUN git clone --branch 4.0.0 https://github.com/ros/urdfdom.git \
    && cd urdfdom \
    && mkdir build && cd build \
    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_LIBDIR=/usr/lib \
    && make && make install

RUN git clone --recursive --branch v2.7.0 https://github.com/stack-of-tasks/pinocchio.git \
    && cd pinocchio \
    && mkdir build \
    && cd build \
    && cmake .. -DBUILD_TESTING=OFF -DBUILD_PYTHON_INTERFACE=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=/usr/lib \
    && make -j4 \
    && make install

RUN git clone --recursive --branch v3.11.1 https://github.com/nlohmann/json.git \
    && cd json \
    && mkdir build \
    && cd build \
    && cmake .. -DJSON_BuildTests=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=/usr/lib \
    && make -j4 \
    && make install

USER $USERNAME
